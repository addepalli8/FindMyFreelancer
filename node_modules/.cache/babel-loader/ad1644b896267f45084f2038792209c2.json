{"ast":null,"code":"var _jsxFileName = \"/Users/addepalli/Downloads/FindMyFreelancer/src/components/Home/index.js\";\nimport React, { Component } from \"react\"; // importing the style from the external css file\n\nimport \"./home.css\"; // declaring the type of states used\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}; //  binding all the necessary functions to perform state operations\n\n    this.addCompareProduct = this.addCompareProduct.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {} // to add a item to the compare list\n\n\n  addCompareProduct(productId) {\n    const tempCompareList = [...this.state.compareList];\n    console.log('kokokok');\n  } // to remove a item from the compare list\n\n\n  removeCompareProduct(productId) {\n    const tempCompareList = [...this.state.compareList]; // finding the selected item exist in  the comparison list\n\n    const foundIndex = this.state.compareList.findIndex(product => product.id === productId); // check if the item exist and if exists remove it from the comparison list\n\n    if (foundIndex >= 0) {\n      tempCompareList.splice(foundIndex, 1);\n      this.setState(prevState => ({\n        compareList: tempCompareList\n      }));\n    }\n  } // show the add/edit attributes modal\n\n\n  openEditAttributes() {\n    const showEditAttributes = !this.state.showEditAttributes; // changing the flag to open the attribute modal and clearing if any search field exists\n\n    this.setState(prevState => ({\n      showEditAttributes,\n      search: \"\"\n    })); // saving the current attribute states if needed on click of cancel\n\n    if (showEditAttributes) {\n      const prevAttrState = {\n        price: this.state.price,\n        colors: this.state.colors,\n        condition: this.state.condition,\n        vendors: this.state.vendors,\n        selectall: this.state.selectall\n      };\n      this.setState(prevState => ({\n        prevAttrState\n      }));\n    }\n  } // canceling the attribute states and reverting to the previous opened states\n\n\n  cancelEditAttributes() {\n    // assigning the previous set attribute states and closing the modal\n    const prevAttrState = this.state.prevAttrState;\n    this.setState(prevState => ({\n      showEditAttributes: false,\n      price: prevAttrState.price,\n      colors: prevAttrState.colors,\n      condition: prevAttrState.condition,\n      vendors: prevAttrState.vendors,\n      selectall: prevAttrState.selectall\n    }));\n  } // submiting the attribute states\n\n\n  submitEditAttributes() {\n    //  closing the attributes modal\n    this.setState(prevState => ({\n      showEditAttributes: false\n    }));\n  } // updating the search value on change of input field\n\n\n  handleChange(e) {\n    const {\n      value\n    } = e.target; // assigning the value to the search state\n\n    this.setState(prevState => ({\n      search: value\n    }));\n  } // handeling the checkbox change of all the attributes\n\n\n  handleCheckboxChange(name, value) {\n    // assigning the values for the respective checkbox onChange of value\n    this.setState(prevState => ({\n      [name]: value\n    })); //  deselect the selectall category if any of the other fields are deselected\n\n    if (name !== \"selectall\" && value === false) {\n      this.setState(prevState => ({\n        selectall: false\n      }));\n    }\n  } // clearing the search field input text\n\n\n  clearSearch() {\n    this.setState(prevState => ({\n      search: \"\"\n    }));\n  } // rendering the checkbox section in the modal\n\n\n  renderCheckbox() {\n    // created a list of all the attributes\n    const attribList = [{\n      name: \"selectall\",\n      label: \"Select All\"\n    }, {\n      name: \"price\",\n      label: \"Price\"\n    }, {\n      name: \"colors\",\n      label: \"Colors\"\n    }, {\n      name: \"condition\",\n      label: \"Condition\"\n    }, {\n      name: \"vendors\",\n      label: \"Vendors\"\n    }]; // show only the attributes which are searched for the particular search term\n\n    if (this.state.search && this.state.search.length) {\n      const foundListLength = attribList.filter(item => this.state.search ? item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) > -1 : \"\").length; // to show the no results found if search is inappropirate and button of clear search\n\n      if (foundListLength === 0) {\n        return React.createElement(\"div\", {\n          className: \"attribute-modal-no-results\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"No Results found\", React.createElement(\"div\", {\n          className: \"attribute-modal-clear-search\",\n          onClick: this.clearSearch,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"Clear Search\"));\n      } // showing the attributes which are searched for the particular search term\n\n\n      return React.createElement(\"div\", {\n        className: \"attribute-modal-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, attribList.filter(item => this.state.search ? item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) > -1 : \"\").map(item => React.createElement(Checkbox, {\n        key: item.name,\n        name: item.name,\n        label: item.label,\n        value: this.state[item.name],\n        handleCheckboxChange: this.handleCheckboxChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })));\n    } else {\n      // if not searched for anything display all the fields\n      return React.createElement(\"div\", {\n        className: \"attribute-modal-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        name: \"selectall\",\n        label: \"Select All\",\n        value: this.state.selectall,\n        handleCheckboxChange: this.handleCheckboxChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        name: \"price\",\n        label: \"Price\",\n        value: this.state.price,\n        handleCheckboxChange: this.handleCheckboxChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        name: \"colors\",\n        label: \"Colors\",\n        value: this.state.colors,\n        handleCheckboxChange: this.handleCheckboxChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        name: \"condition\",\n        label: \"Condition\",\n        value: this.state.condition,\n        handleCheckboxChange: this.handleCheckboxChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        name: \"vendors\",\n        label: \"Vendors\",\n        value: this.state.vendors,\n        handleCheckboxChange: this.handleCheckboxChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        overflow: this.state.showEditAttributes ? \"hidden\" : \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Compare Products\"), React.createElement(\"div\", {\n      className: \"products-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, this.state.completeList.map(product => React.createElement(Product, {\n      key: product.id,\n      product: product,\n      removeCompareProduct: this.removeCompareProduct,\n      addCompareProduct: this.addCompareProduct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    })))), this.state.compareList && this.state.compareList.length ? React.createElement(\"div\", {\n      className: \"manage-attributes-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"manage-attribute-button\",\n      onClick: this.openEditAttributes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Add/Remove Attributes\")) : null, this.state.compareList && this.state.compareList.length ? React.createElement(\"div\", {\n      className: \"comparison-section\",\n      style: {\n        display: this.state.showEditAttributes ? \"none\" : \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comparison-product-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comparison-fields-title\",\n      style: {\n        background: this.state.compareList && this.state.compareList.length ? \"#fff\" : \"#d5d5d8\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), this.state.price ? React.createElement(\"div\", {\n      className: \"comparison-fields-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Price\") : null, this.state.colors ? React.createElement(\"div\", {\n      className: \"comparison-fields-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Colors\") : null, this.state.condition ? React.createElement(\"div\", {\n      className: \"comparison-fields-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Condition\") : null, this.state.vendors ? React.createElement(\"div\", {\n      className: \"comparison-fields-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Vendors\") : null), this.state.compareList.map(product => React.createElement(\"div\", {\n      key: \"cmp_\" + product.id,\n      className: \"comparison-product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comparison-fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, product.name), this.state.price ? React.createElement(\"div\", {\n      className: \"comparison-fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, product.price) : null, this.state.colors ? React.createElement(\"div\", {\n      className: \"comparison-fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, product.colors.map(item => React.createElement(\"div\", {\n      key: \"color_\" + item + product.id,\n      style: {\n        background: item\n      },\n      className: \"comparison-colors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }))) : null, this.state.condition ? React.createElement(\"div\", {\n      className: \"comparison-fields\",\n      style: {\n        background: product.condition === \"Fresh\" ? \"#80FFA5\" : \"#E86176\",\n        color: \"#FFF\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, product.condition) : null, this.state.vendors ? React.createElement(\"div\", {\n      className: \"comparison-fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, product.vendors.map(item => React.createElement(\"div\", {\n      key: \"vendor_\" + item + product.id,\n      style: {\n        marginRight: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, item))) : null))) : null, this.state.showEditAttributes ? React.createElement(\"div\", {\n      className: \"edit-attribute-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"attribute-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"attribute-modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Add/Remove Attributes\"), React.createElement(\"div\", {\n      className: \"attribute-modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"search attributes\",\n      className: \"input-text-field\",\n      type: \"text\",\n      id: \"search\",\n      name: \"search\",\n      onChange: this.handleChange,\n      value: this.state.search,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), this.state.search && this.state.search.length ? React.createElement(\"img\", {\n      src: clearImage,\n      className: \"clear-search-button\",\n      onClick: this.clearSearch,\n      alt: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }) : null), this.renderCheckbox()), React.createElement(\"div\", {\n      className: \"attribute-modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"attribute-modal-cancel\",\n      onClick: this.cancelEditAttributes,\n      style: {\n        marginRight: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"div\", {\n      className: \"attribute-modal-apply\",\n      onClick: this.submitEditAttributes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"Apply\")))) : null);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/addepalli/Downloads/FindMyFreelancer/src/components/Home/index.js"],"names":["React","Component","Home","constructor","props","state","addCompareProduct","bind","componentDidUpdate","prevProps","prevState","productId","tempCompareList","compareList","console","log","removeCompareProduct","foundIndex","findIndex","product","id","splice","setState","openEditAttributes","showEditAttributes","search","prevAttrState","price","colors","condition","vendors","selectall","cancelEditAttributes","submitEditAttributes","handleChange","e","value","target","handleCheckboxChange","name","clearSearch","renderCheckbox","attribList","label","length","foundListLength","filter","item","toLowerCase","indexOf","map","render","overflow","completeList","display","background","color","marginRight","position","clearImage"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,YAAP,C,CAGA;;AAMA,MAAMC,IAAN,SAAmBD,SAAnB,CAA2C;AACzCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb,CAFiB,CAKjB;;AACC,QAAD,CAAYC,iBAAZ,GAAgC,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAhC;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAExC,CAZwC,CAczC;;;AACAJ,EAAAA,iBAAiB,CAACK,SAAD,EAAY;AAC3B,UAAMC,eAAe,GAAG,CAAC,GAAG,KAAKP,KAAL,CAAWQ,WAAf,CAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GAlBwC,CAoBzC;;;AACAC,EAAAA,oBAAoB,CAACL,SAAD,EAAY;AAC9B,UAAMC,eAAe,GAAG,CAAC,GAAG,KAAKP,KAAL,CAAWQ,WAAf,CAAxB,CAD8B,CAE9B;;AACA,UAAMI,UAAU,GAAG,KAAKZ,KAAL,CAAWQ,WAAX,CAAuBK,SAAvB,CACjBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeT,SADT,CAAnB,CAH8B,CAM9B;;AACA,QAAIM,UAAU,IAAI,CAAlB,EAAqB;AACnBL,MAAAA,eAAe,CAACS,MAAhB,CAAuBJ,UAAvB,EAAmC,CAAnC;AACA,WAAKK,QAAL,CAAcZ,SAAS,KAAK;AAC1BG,QAAAA,WAAW,EAAED;AADa,OAAL,CAAvB;AAGD;AACF,GAlCwC,CAoCzC;;;AACAW,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,kBAAkB,GAAG,CAAC,KAAKnB,KAAL,CAAWmB,kBAAvC,CADmB,CAEnB;;AACA,SAAKF,QAAL,CAAcZ,SAAS,KAAK;AAC1Bc,MAAAA,kBAD0B;AAE1BC,MAAAA,MAAM,EAAE;AAFkB,KAAL,CAAvB,EAHmB,CAOnB;;AACA,QAAID,kBAAJ,EAAwB;AACtB,YAAME,aAAa,GAAG;AACpBC,QAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWsB,KADE;AAEpBC,QAAAA,MAAM,EAAE,KAAKvB,KAAL,CAAWuB,MAFC;AAGpBC,QAAAA,SAAS,EAAE,KAAKxB,KAAL,CAAWwB,SAHF;AAIpBC,QAAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWyB,OAJA;AAKpBC,QAAAA,SAAS,EAAE,KAAK1B,KAAL,CAAW0B;AALF,OAAtB;AAOA,WAAKT,QAAL,CAAcZ,SAAS,KAAK;AAC1BgB,QAAAA;AAD0B,OAAL,CAAvB;AAGD;AACF,GAzDwC,CA2DzC;;;AACAM,EAAAA,oBAAoB,GAAG;AACrB;AACA,UAAMN,aAAa,GAAG,KAAKrB,KAAL,CAAWqB,aAAjC;AACA,SAAKJ,QAAL,CAAcZ,SAAS,KAAK;AAC1Bc,MAAAA,kBAAkB,EAAE,KADM;AAE1BG,MAAAA,KAAK,EAAED,aAAa,CAACC,KAFK;AAG1BC,MAAAA,MAAM,EAAEF,aAAa,CAACE,MAHI;AAI1BC,MAAAA,SAAS,EAAEH,aAAa,CAACG,SAJC;AAK1BC,MAAAA,OAAO,EAAEJ,aAAa,CAACI,OALG;AAM1BC,MAAAA,SAAS,EAAEL,aAAa,CAACK;AANC,KAAL,CAAvB;AAQD,GAvEwC,CAyEzC;;;AACAE,EAAAA,oBAAoB,GAAG;AACrB;AACA,SAAKX,QAAL,CAAcZ,SAAS,KAAK;AAC1Bc,MAAAA,kBAAkB,EAAE;AADM,KAAL,CAAvB;AAGD,GA/EwC,CAiFzC;;;AACAU,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,UAAM;AAAEC,MAAAA;AAAF,QAAYD,CAAC,CAACE,MAApB,CADc,CAEd;;AACA,SAAKf,QAAL,CAAcZ,SAAS,KAAK;AAC1Be,MAAAA,MAAM,EAAEW;AADkB,KAAL,CAAvB;AAGD,GAxFwC,CA0FzC;;;AACAE,EAAAA,oBAAoB,CAACC,IAAD,EAAOH,KAAP,EAAc;AAChC;AACA,SAAKd,QAAL,CAAcZ,SAAS,KAAK;AAC1B,OAAC6B,IAAD,GAAQH;AADkB,KAAL,CAAvB,EAFgC,CAKhC;;AACA,QAAIG,IAAI,KAAK,WAAT,IAAwBH,KAAK,KAAK,KAAtC,EAA6C;AAC3C,WAAKd,QAAL,CAAcZ,SAAS,KAAK;AAC1BqB,QAAAA,SAAS,EAAE;AADe,OAAL,CAAvB;AAGD;AACF,GAtGwC,CAwGzC;;;AACAS,EAAAA,WAAW,GAAG;AACZ,SAAKlB,QAAL,CAAcZ,SAAS,KAAK;AAC1Be,MAAAA,MAAM,EAAE;AADkB,KAAL,CAAvB;AAGD,GA7GwC,CA+GzC;;;AACAgB,EAAAA,cAAc,GAAG;AACf;AACA,UAAMC,UAAU,GAAG,CACjB;AAAEH,MAAAA,IAAI,EAAE,WAAR;AAAqBI,MAAAA,KAAK,EAAE;AAA5B,KADiB,EAEjB;AAAEJ,MAAAA,IAAI,EAAE,OAAR;AAAiBI,MAAAA,KAAK,EAAE;AAAxB,KAFiB,EAGjB;AAAEJ,MAAAA,IAAI,EAAE,QAAR;AAAkBI,MAAAA,KAAK,EAAE;AAAzB,KAHiB,EAIjB;AAAEJ,MAAAA,IAAI,EAAE,WAAR;AAAqBI,MAAAA,KAAK,EAAE;AAA5B,KAJiB,EAKjB;AAAEJ,MAAAA,IAAI,EAAE,SAAR;AAAmBI,MAAAA,KAAK,EAAE;AAA1B,KALiB,CAAnB,CAFe,CASf;;AACA,QAAI,KAAKtC,KAAL,CAAWoB,MAAX,IAAqB,KAAKpB,KAAL,CAAWoB,MAAX,CAAkBmB,MAA3C,EAAmD;AACjD,YAAMC,eAAe,GAAGH,UAAU,CAACI,MAAX,CAAkBC,IAAI,IAC5C,KAAK1C,KAAL,CAAWoB,MAAX,GACIsB,IAAI,CAACR,IAAL,CAAUS,WAAV,GAAwBC,OAAxB,CAAgC,KAAK5C,KAAL,CAAWoB,MAAX,CAAkBuB,WAAlB,EAAhC,IAAmE,CAAC,CADxE,GAEI,EAHkB,EAItBJ,MAJF,CADiD,CAMjD;;AACA,UAAIC,eAAe,KAAK,CAAxB,EAA2B;AACzB,eACE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEE;AACE,UAAA,SAAS,EAAC,8BADZ;AAEE,UAAA,OAAO,EAAE,KAAKL,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CADF;AAWD,OAnBgD,CAoBjD;;;AACA,aACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,UAAU,CACRI,MADF,CACSC,IAAI,IACV,KAAK1C,KAAL,CAAWoB,MAAX,GACIsB,IAAI,CAACR,IAAL,CAAUS,WAAV,GAAwBC,OAAxB,CAAgC,KAAK5C,KAAL,CAAWoB,MAAX,CAAkBuB,WAAlB,EAAhC,IAAmE,CAAC,CADxE,GAEI,EAJP,EAMEE,GANF,CAMMH,IAAI,IACP,oBAAC,QAAD;AACE,QAAA,GAAG,EAAEA,IAAI,CAACR,IADZ;AAEE,QAAA,IAAI,EAAEQ,IAAI,CAACR,IAFb;AAGE,QAAA,KAAK,EAAEQ,IAAI,CAACJ,KAHd;AAIE,QAAA,KAAK,EAAE,KAAKtC,KAAL,CAAW0C,IAAI,CAACR,IAAhB,CAJT;AAKE,QAAA,oBAAoB,EAAE,KAAKD,oBAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPH,CADH,CADF;AAmBD,KAxCD,MAwCO;AACL;AACA,aACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,KAAK,EAAC,YAFR;AAGE,QAAA,KAAK,EAAE,KAAKjC,KAAL,CAAW0B,SAHpB;AAIE,QAAA,oBAAoB,EAAE,KAAKO,oBAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWsB,KAHpB;AAIE,QAAA,oBAAoB,EAAE,KAAKW,oBAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAaE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWuB,MAHpB;AAIE,QAAA,oBAAoB,EAAE,KAAKU,oBAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAmBE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWwB,SAHpB;AAIE,QAAA,oBAAoB,EAAE,KAAKS,oBAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,EAyBE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWyB,OAHpB;AAIE,QAAA,oBAAoB,EAAE,KAAKQ,oBAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBF,CADF;AAkCD;AACF;;AAEDa,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,KAAK/C,KAAL,CAAWmB,kBAAX,GAAgC,QAAhC,GAA2C;AADhD,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnB,KAAL,CAAWgD,YAAX,CAAwBH,GAAxB,CAA4B/B,OAAO,IAClC,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACC,EADf;AAEE,MAAA,OAAO,EAAED,OAFX;AAGE,MAAA,oBAAoB,EAAE,KAAKH,oBAH7B;AAIE,MAAA,iBAAiB,EAAE,KAAKV,iBAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAFF,CATF,EAyBG,KAAKD,KAAL,CAAWQ,WAAX,IAA0B,KAAKR,KAAL,CAAWQ,WAAX,CAAuB+B,MAAjD,GACC;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,yBADZ;AAEE,MAAA,OAAO,EAAE,KAAKrB,kBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADD,GASG,IAlCN,EAmCG,KAAKlB,KAAL,CAAWQ,WAAX,IAA0B,KAAKR,KAAL,CAAWQ,WAAX,CAAuB+B,MAAjD,GACC;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,KAAK,EAAE;AAAEU,QAAAA,OAAO,EAAE,KAAKjD,KAAL,CAAWmB,kBAAX,GAAgC,MAAhC,GAAyC;AAApD,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,yBADZ;AAEE,MAAA,KAAK,EAAE;AACL+B,QAAAA,UAAU,EACR,KAAKlD,KAAL,CAAWQ,WAAX,IAA0B,KAAKR,KAAL,CAAWQ,WAAX,CAAuB+B,MAAjD,GACI,MADJ,GAEI;AAJD,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUG,KAAKvC,KAAL,CAAWsB,KAAX,GACC;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,GAEG,IAZN,EAaG,KAAKtB,KAAL,CAAWuB,MAAX,GACC;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAEG,IAfN,EAgBG,KAAKvB,KAAL,CAAWwB,SAAX,GACC;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,GAEG,IAlBN,EAmBG,KAAKxB,KAAL,CAAWyB,OAAX,GACC;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,GAEG,IArBN,CAJF,EA2BG,KAAKzB,KAAL,CAAWQ,WAAX,CAAuBqC,GAAvB,CAA2B/B,OAAO,IACjC;AAAK,MAAA,GAAG,EAAE,SAASA,OAAO,CAACC,EAA3B;AAA+B,MAAA,SAAS,EAAC,oBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCD,OAAO,CAACoB,IAA5C,CADF,EAEG,KAAKlC,KAAL,CAAWsB,KAAX,GACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCR,OAAO,CAACQ,KAA5C,CADD,GAEG,IAJN,EAKG,KAAKtB,KAAL,CAAWuB,MAAX,GACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,OAAO,CAACS,MAAR,CAAesB,GAAf,CAAmBH,IAAI,IACtB;AACE,MAAA,GAAG,EAAE,WAAWA,IAAX,GAAkB5B,OAAO,CAACC,EADjC;AAEE,MAAA,KAAK,EAAE;AAAEmC,QAAAA,UAAU,EAAER;AAAd,OAFT;AAGE,MAAA,SAAS,EAAC,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADD,GAUG,IAfN,EAgBG,KAAK1C,KAAL,CAAWwB,SAAX,GACC;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,KAAK,EAAE;AACL0B,QAAAA,UAAU,EACRpC,OAAO,CAACU,SAAR,KAAsB,OAAtB,GAAgC,SAAhC,GAA4C,SAFzC;AAGL2B,QAAAA,KAAK,EAAE;AAHF,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGrC,OAAO,CAACU,SARX,CADD,GAWG,IA3BN,EA4BG,KAAKxB,KAAL,CAAWyB,OAAX,GACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,OAAO,CAACW,OAAR,CAAgBoB,GAAhB,CAAoBH,IAAI,IACvB;AACE,MAAA,GAAG,EAAE,YAAYA,IAAZ,GAAmB5B,OAAO,CAACC,EADlC;AAEE,MAAA,KAAK,EAAE;AAAEqC,QAAAA,WAAW,EAAE;AAAf,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGV,IAJH,CADD,CADH,CADD,GAWG,IAvCN,CADD,CA3BH,CADD,GAwEG,IA3GN,EAiHG,KAAK1C,KAAL,CAAWmB,kBAAX,GACC;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAIE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAEkC,QAAAA,QAAQ,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,WAAW,EAAC,mBADd;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,EAAE,EAAC,QAJL;AAKE,MAAA,IAAI,EAAC,QALP;AAME,MAAA,QAAQ,EAAE,KAAKxB,YANjB;AAOE,MAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWoB,MAPpB;AAQE,MAAA,YAAY,EAAC,KARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWG,KAAKpB,KAAL,CAAWoB,MAAX,IAAqB,KAAKpB,KAAL,CAAWoB,MAAX,CAAkBmB,MAAvC,GACC;AACE,MAAA,GAAG,EAAEe,UADP;AAEE,MAAA,SAAS,EAAC,qBAFZ;AAGE,MAAA,OAAO,EAAE,KAAKnB,WAHhB;AAIE,MAAA,GAAG,EAAC,OAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAOG,IAlBN,CADF,EAqBG,KAAKC,cAAL,EArBH,CAJF,EA2BE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,OAAO,EAAE,KAAKT,oBAFhB;AAGE,MAAA,KAAK,EAAE;AAAEyB,QAAAA,WAAW,EAAE;AAAf,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQE;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,OAAO,EAAE,KAAKxB,oBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,CA3BF,CADF,CADD,GA8CG,IA/JN,CADF;AAmKD;;AA7WwC;;AAgX3C,eAAe/B,IAAf","sourcesContent":["// @flow\n\nimport React, { Component } from \"react\";\n// importing the style from the external css file\nimport \"./home.css\";\n\n\n// declaring the type of states used\ntype Props = {};\ntype State = {\n\n};\n\nclass Home extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n\n    //  binding all the necessary functions to perform state operations\n    (this: any).addCompareProduct = this.addCompareProduct.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n  }\n\n  // to add a item to the compare list\n  addCompareProduct(productId) {\n    const tempCompareList = [...this.state.compareList];\n    console.log('kokokok');\n  }\n\n  // to remove a item from the compare list\n  removeCompareProduct(productId) {\n    const tempCompareList = [...this.state.compareList];\n    // finding the selected item exist in  the comparison list\n    const foundIndex = this.state.compareList.findIndex(\n      product => product.id === productId\n    );\n    // check if the item exist and if exists remove it from the comparison list\n    if (foundIndex >= 0) {\n      tempCompareList.splice(foundIndex, 1);\n      this.setState(prevState => ({\n        compareList: tempCompareList\n      }));\n    }\n  }\n\n  // show the add/edit attributes modal\n  openEditAttributes() {\n    const showEditAttributes = !this.state.showEditAttributes;\n    // changing the flag to open the attribute modal and clearing if any search field exists\n    this.setState(prevState => ({\n      showEditAttributes,\n      search: \"\"\n    }));\n    // saving the current attribute states if needed on click of cancel\n    if (showEditAttributes) {\n      const prevAttrState = {\n        price: this.state.price,\n        colors: this.state.colors,\n        condition: this.state.condition,\n        vendors: this.state.vendors,\n        selectall: this.state.selectall\n      };\n      this.setState(prevState => ({\n        prevAttrState\n      }));\n    }\n  }\n\n  // canceling the attribute states and reverting to the previous opened states\n  cancelEditAttributes() {\n    // assigning the previous set attribute states and closing the modal\n    const prevAttrState = this.state.prevAttrState;\n    this.setState(prevState => ({\n      showEditAttributes: false,\n      price: prevAttrState.price,\n      colors: prevAttrState.colors,\n      condition: prevAttrState.condition,\n      vendors: prevAttrState.vendors,\n      selectall: prevAttrState.selectall\n    }));\n  }\n\n  // submiting the attribute states\n  submitEditAttributes() {\n    //  closing the attributes modal\n    this.setState(prevState => ({\n      showEditAttributes: false\n    }));\n  }\n\n  // updating the search value on change of input field\n  handleChange(e) {\n    const { value } = e.target;\n    // assigning the value to the search state\n    this.setState(prevState => ({\n      search: value\n    }));\n  }\n\n  // handeling the checkbox change of all the attributes\n  handleCheckboxChange(name, value) {\n    // assigning the values for the respective checkbox onChange of value\n    this.setState(prevState => ({\n      [name]: value\n    }));\n    //  deselect the selectall category if any of the other fields are deselected\n    if (name !== \"selectall\" && value === false) {\n      this.setState(prevState => ({\n        selectall: false\n      }));\n    }\n  }\n\n  // clearing the search field input text\n  clearSearch() {\n    this.setState(prevState => ({\n      search: \"\"\n    }));\n  }\n\n  // rendering the checkbox section in the modal\n  renderCheckbox() {\n    // created a list of all the attributes\n    const attribList = [\n      { name: \"selectall\", label: \"Select All\" },\n      { name: \"price\", label: \"Price\" },\n      { name: \"colors\", label: \"Colors\" },\n      { name: \"condition\", label: \"Condition\" },\n      { name: \"vendors\", label: \"Vendors\" }\n    ];\n    // show only the attributes which are searched for the particular search term\n    if (this.state.search && this.state.search.length) {\n      const foundListLength = attribList.filter(item =>\n        this.state.search\n          ? item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) > -1\n          : \"\"\n      ).length;\n      // to show the no results found if search is inappropirate and button of clear search\n      if (foundListLength === 0) {\n        return (\n          <div className=\"attribute-modal-no-results\">\n            No Results found\n            <div\n              className=\"attribute-modal-clear-search\"\n              onClick={this.clearSearch}\n            >\n              Clear Search\n            </div>\n          </div>\n        );\n      }\n      // showing the attributes which are searched for the particular search term\n      return (\n        <div className=\"attribute-modal-checkbox\">\n          {attribList\n            .filter(item =>\n              this.state.search\n                ? item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) > -1\n                : \"\"\n            )\n            .map(item => (\n              <Checkbox\n                key={item.name}\n                name={item.name}\n                label={item.label}\n                value={this.state[item.name]}\n                handleCheckboxChange={this.handleCheckboxChange}\n              />\n            ))}\n        </div>\n      );\n    } else {\n      // if not searched for anything display all the fields\n      return (\n        <div className=\"attribute-modal-checkbox\">\n          <Checkbox\n            name=\"selectall\"\n            label=\"Select All\"\n            value={this.state.selectall}\n            handleCheckboxChange={this.handleCheckboxChange}\n          />\n          <Checkbox\n            name=\"price\"\n            label=\"Price\"\n            value={this.state.price}\n            handleCheckboxChange={this.handleCheckboxChange}\n          />\n          <Checkbox\n            name=\"colors\"\n            label=\"Colors\"\n            value={this.state.colors}\n            handleCheckboxChange={this.handleCheckboxChange}\n          />\n          <Checkbox\n            name=\"condition\"\n            label=\"Condition\"\n            value={this.state.condition}\n            handleCheckboxChange={this.handleCheckboxChange}\n          />\n          <Checkbox\n            name=\"vendors\"\n            label=\"Vendors\"\n            value={this.state.vendors}\n            handleCheckboxChange={this.handleCheckboxChange}\n          />\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className=\"container\"\n        style={{\n          overflow: this.state.showEditAttributes ? \"hidden\" : \"scroll\"\n        }}\n      >\n        {\n          // displaying the list of all the list of products\n        }\n        <div>\n          <div className=\"product-title\">Compare Products</div>\n          <div className=\"products-container\">\n            {this.state.completeList.map(product => (\n              <Product\n                key={product.id}\n                product={product}\n                removeCompareProduct={this.removeCompareProduct}\n                addCompareProduct={this.addCompareProduct}\n              />\n            ))}\n          </div>\n        </div>\n        {\n          // showing the list of all the items added to the comparison list\n        }\n        {this.state.compareList && this.state.compareList.length ? (\n          <div className=\"manage-attributes-section\">\n            <div\n              className=\"manage-attribute-button\"\n              onClick={this.openEditAttributes}\n            >\n              Add/Remove Attributes\n            </div>\n          </div>\n        ) : null}\n        {this.state.compareList && this.state.compareList.length ? (\n          <div\n            className=\"comparison-section\"\n            style={{ display: this.state.showEditAttributes ? \"none\" : \"flex\" }}\n          >\n            <div className=\"comparison-product-title\">\n              <div\n                className=\"comparison-fields-title\"\n                style={{\n                  background:\n                    this.state.compareList && this.state.compareList.length\n                      ? \"#fff\"\n                      : \"#d5d5d8\"\n                }}\n              ></div>\n              {this.state.price ? (\n                <div className=\"comparison-fields-title\">Price</div>\n              ) : null}\n              {this.state.colors ? (\n                <div className=\"comparison-fields-title\">Colors</div>\n              ) : null}\n              {this.state.condition ? (\n                <div className=\"comparison-fields-title\">Condition</div>\n              ) : null}\n              {this.state.vendors ? (\n                <div className=\"comparison-fields-title\">Vendors</div>\n              ) : null}\n            </div>\n            {this.state.compareList.map(product => (\n              <div key={\"cmp_\" + product.id} className=\"comparison-product\">\n                <div className=\"comparison-fields\">{product.name}</div>\n                {this.state.price ? (\n                  <div className=\"comparison-fields\">{product.price}</div>\n                ) : null}\n                {this.state.colors ? (\n                  <div className=\"comparison-fields\">\n                    {product.colors.map(item => (\n                      <div\n                        key={\"color_\" + item + product.id}\n                        style={{ background: item }}\n                        className=\"comparison-colors\"\n                      />\n                    ))}\n                  </div>\n                ) : null}\n                {this.state.condition ? (\n                  <div\n                    className=\"comparison-fields\"\n                    style={{\n                      background:\n                        product.condition === \"Fresh\" ? \"#80FFA5\" : \"#E86176\",\n                      color: \"#FFF\"\n                    }}\n                  >\n                    {product.condition}\n                  </div>\n                ) : null}\n                {this.state.vendors ? (\n                  <div className=\"comparison-fields\">\n                    {product.vendors.map(item => (\n                      <div\n                        key={\"vendor_\" + item + product.id}\n                        style={{ marginRight: 5 }}\n                      >\n                        {item}\n                      </div>\n                    ))}\n                  </div>\n                ) : null}\n              </div>\n            ))}\n          </div>\n        ) : null}\n\n        {\n          // to show the modal on click of add/edit attributes\n        }\n\n        {this.state.showEditAttributes ? (\n          <div className=\"edit-attribute-modal\">\n            <div className=\"attribute-modal\">\n              <div className=\"attribute-modal-header\">\n                Add/Remove Attributes\n              </div>\n              <div className=\"attribute-modal-body\">\n                <div style={{ position: \"relative\" }}>\n                  <input\n                    placeholder=\"search attributes\"\n                    className=\"input-text-field\"\n                    type=\"text\"\n                    id=\"search\"\n                    name=\"search\"\n                    onChange={this.handleChange}\n                    value={this.state.search}\n                    autoComplete=\"off\"\n                  />\n                  {this.state.search && this.state.search.length ? (\n                    <img\n                      src={clearImage}\n                      className=\"clear-search-button\"\n                      onClick={this.clearSearch}\n                      alt=\"close\"\n                    />\n                  ) : null}\n                </div>\n                {this.renderCheckbox()}\n              </div>\n              <div className=\"attribute-modal-footer\">\n                <div\n                  className=\"attribute-modal-cancel\"\n                  onClick={this.cancelEditAttributes}\n                  style={{ marginRight: \"10px\" }}\n                >\n                  Cancel\n                </div>\n                <div\n                  className=\"attribute-modal-apply\"\n                  onClick={this.submitEditAttributes}\n                >\n                  Apply\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}