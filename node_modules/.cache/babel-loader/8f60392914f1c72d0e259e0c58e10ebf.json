{"ast":null,"code":"var _jsxFileName = \"/Users/addepalli/Downloads/FindMyFreelancer/src/components/Checkbox/index.js\";\nimport React, { Component } from \"react\"; // importing the style from the external css file\n\nimport \"./checkbox.css\"; // declaring the type of states used\n\nclass Checkbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // assign the list of all the attributes to true\n      checkbox: true\n    }; //  binding all the necessary functions to perform state operations\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    // get the existing state of attribute from the parent\n    this.setState(prevState => ({\n      checkbox: this.props.value\n    }));\n  } //  update the state of attribute from the parent if there is any change update the state\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value) {\n      this.setState(prevState => ({\n        checkbox: this.props.value\n      }));\n    }\n  } // toggle the state of the attribute onchange\n\n\n  handleInputChange() {\n    const checkbox = !this.state.checkbox;\n    this.setState(prevState => ({\n      checkbox\n    })); // call the parent function onchange of the checkbox attribute\n\n    this.props.handleCheckboxChange(this.props.name, checkbox);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"checkbox-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        marginRight: 10\n      },\n      type: \"checkbox\",\n      name: this.props.name,\n      checked: this.state.checkbox,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), this.props.label));\n  }\n\n}\n\nexport default Checkbox;","map":{"version":3,"sources":["/Users/addepalli/Downloads/FindMyFreelancer/src/components/Checkbox/index.js"],"names":["React","Component","Checkbox","constructor","props","state","checkbox","handleInputChange","bind","componentDidMount","setState","prevState","value","componentDidUpdate","prevProps","handleCheckboxChange","name","render","marginRight","label"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAO,gBAAP,C,CAEA;;AAWA,MAAMC,QAAN,SAAuBD,SAAvB,CAA+C;AAC7CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACX;AACAC,MAAAA,QAAQ,EAAE;AAFC,KAAb,CAFiB,CAMjB;;AACC,QAAD,CAAYC,iBAAZ,GAAgC,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAhC;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BL,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWQ;AADK,KAAL,CAAvB;AAGD,GAhB4C,CAiB7C;;;AACAC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKV,KAAL,CAAWQ,KAAX,KAAqBE,SAAS,CAACF,KAAnC,EAA0C;AACxC,WAAKF,QAAL,CAAcC,SAAS,KAAK;AAC1BL,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWQ;AADK,OAAL,CAAvB;AAGD;AACF,GAxB4C,CA0B7C;;;AACAL,EAAAA,iBAAiB,GAAG;AAClB,UAAMD,QAAQ,GAAG,CAAC,KAAKD,KAAL,CAAWC,QAA7B;AACA,SAAKI,QAAL,CAAcC,SAAS,KAAK;AAC1BL,MAAAA;AAD0B,KAAL,CAAvB,EAFkB,CAKlB;;AACA,SAAKF,KAAL,CAAWW,oBAAX,CAAgC,KAAKX,KAAL,CAAWY,IAA3C,EAAiDV,QAAjD;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OADT;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWY,IAHnB;AAIE,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWC,QAJtB;AAKE,MAAA,QAAQ,EAAE,KAAKC,iBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWG,KAAKH,KAAL,CAAWe,KAXd,CAJF,CADF;AAoBD;;AAzD4C;;AA4D/C,eAAejB,QAAf","sourcesContent":["// @flow\n\nimport React, { Component } from \"react\";\n\n// importing the style from the external css file\nimport \"./checkbox.css\";\n\n// declaring the type of states used\ntype Props = {\n  value: boolean,\n  name: string,\n  label: string,\n  handleCheckboxChange: () => void\n};\ntype State = {\n  checkbox: boolean\n};\n\nclass Checkbox extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // assign the list of all the attributes to true\n      checkbox: true\n    };\n    //  binding all the necessary functions to perform state operations\n    (this: any).handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    // get the existing state of attribute from the parent\n    this.setState(prevState => ({\n      checkbox: this.props.value\n    }));\n  }\n  //  update the state of attribute from the parent if there is any change update the state\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value) {\n      this.setState(prevState => ({\n        checkbox: this.props.value\n      }));\n    }\n  }\n\n  // toggle the state of the attribute onchange\n  handleInputChange() {\n    const checkbox = !this.state.checkbox;\n    this.setState(prevState => ({\n      checkbox\n    }));\n    // call the parent function onchange of the checkbox attribute\n    this.props.handleCheckboxChange(this.props.name, checkbox);\n  }\n\n  render() {\n    return (\n      <div className=\"checkbox-section\">\n        {\n          // checkbox value\n        }\n        <label>\n          <input\n            style={{ marginRight: 10 }}\n            type=\"checkbox\"\n            name={this.props.name}\n            checked={this.state.checkbox}\n            onChange={this.handleInputChange}\n          />\n          {\n            // name of the check box\n          }\n          {this.props.label}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}