{"ast":null,"code":"var _jsxFileName = \"/Users/addepalli/Downloads/FindMyFreelancer/src/components/Home/index.js\";\nimport React, { Component } from \"react\";\nimport Card from '../Card'; // importing the style from the external css file\n\nimport \"./home.css\";\nimport LogoIcon from '../../images/logo.jpg'; // declaring the type of states used\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      freelancerList: [],\n      searchType: 'all',\n      searchValue: ''\n    }; //  binding all the necessary functions to perform state operations\n\n    this.handleSearchTypeChange = this.handleSearchTypeChange.bind(this);\n    this.handleSearchValueChange = this.handleSearchValueChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://reqres.in/api/users?page=1').then(response => response.json()).then(data_list => this.setState(prevState => ({\n      freelancerList: data_list.data\n    })));\n    console.log('freelancerList', this.state.freelancerList);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('freelancerList', this.state.freelancerList);\n  }\n\n  handleSearchTypeChange(e) {\n    const {\n      value\n    } = e.target;\n    console.log('kokokok', value);\n    this.setState(prevState => ({\n      searchType: value\n    }));\n  }\n\n  handleSearchValueChange(e) {\n    const {\n      value\n    } = e.target;\n    console.log('valueee', value);\n    this.setState(prevState => ({\n      searchValue: value\n    }));\n  }\n\n  render() {\n    let freelancer_list = this.state.freelancerList;\n\n    if (this.state.searchType !== 'all') {\n      freelancer_list = this.state.freelancerList.filter(item => {\n        return this.state.searchType === 'first_name' && item.first_name && item.first_name.toLowerCase().search(this.state.searchValue.toLowerCase()) !== -1 || this.state.searchType === 'last_name' && item.last_name && item.last_name.toLowerCase().search(this.state.searchValue.toLowerCase()) !== -1 || this.state.searchType === 'email' && item.email && item.email.toLowerCase().search(this.state.searchValue.toLowerCase()) !== -1;\n      });\n    } else {\n      freelancer_list = this.state.freelancerList.filter(item => {\n        return item.first_name && item.first_name.toLowerCase().search(this.state.searchValue.toLowerCase()) !== -1 || item.last_name && item.last_name.toLowerCase().search(this.state.searchValue.toLowerCase()) !== -1 || item.email && item.email.toLowerCase().search(this.state.searchValue.toLowerCase()) !== -1;\n      });\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        maxWidth: 1200,\n        margin: '0px auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: LogoIcon,\n      style: {\n        width: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleSearchTypeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"all\"), React.createElement(\"option\", {\n      value: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"email\"), React.createElement(\"option\", {\n      value: \"first_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"first name\"), React.createElement(\"option\", {\n      value: \"last_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"last name\")), React.createElement(\"input\", {\n      id: \"search\",\n      type: \"text\",\n      value: this.state.searchValue,\n      onChange: this.handleSearchValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"freelancer-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, freelancer_list && freelancer_list.length ? freelancer_list.map((data, index) => React.createElement(Card, {\n      key: data.id + '_' + 'freelancer',\n      first_name: data.first_name,\n      last_name: data.last_name,\n      email: data.email,\n      first_name: data.first_name,\n      avatar: data.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"NO RESULTS FOUND\")));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/addepalli/Downloads/FindMyFreelancer/src/components/Home/index.js"],"names":["React","Component","Card","LogoIcon","Home","constructor","props","state","freelancerList","searchType","searchValue","handleSearchTypeChange","bind","handleSearchValueChange","componentDidMount","fetch","then","response","json","data_list","setState","prevState","data","console","log","componentDidUpdate","prevProps","e","value","target","render","freelancer_list","filter","item","first_name","toLowerCase","search","last_name","email","maxWidth","margin","width","length","map","index","id","avatar"],"mappings":"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","sourcesContent":["// @flow\n\nimport React, { Component } from \"react\";\n\nimport Card from '../Card'\n// importing the style from the external css file\nimport \"./home.css\";\n\nimport LogoIcon from '../../images/logo.jpg';\n// declaring the type of states used\ntype Props = {};\ntype State = {\n\n};\n\nclass Home extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      freelancerList: [],\n      searchType: 'all',\n      searchValue: '',\n    };\n\n    //  binding all the necessary functions to perform state operations\n    (this: any).handleSearchTypeChange = this.handleSearchTypeChange.bind(this);\n    (this: any).handleSearchValueChange = this.handleSearchValueChange.bind(this);\n  }\n  componentDidMount() {\n    fetch('https://reqres.in/api/users?page=1')\n    .then(response => response.json())\n    .then(data_list => this.setState(prevState=>({\n      freelancerList: data_list.data,\n      })));\n      console.log('freelancerList', this.state.freelancerList);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('freelancerList', this.state.freelancerList);\n  }\n\n  handleSearchTypeChange(e) {\n    const { value } = e.target;\n    console.log('kokokok', value);\n    this.setState(prevState=>({\n      searchType: value,\n    }));\n  }\n  handleSearchValueChange(e) {\n    const { value } = e.target;\n    console.log('valueee', value);\n    this.setState(prevState=>({\n      searchValue: value,\n    }));\n  }\n\n  render() {\n    let freelancer_list = this.state.freelancerList;\n\n    if(this.state.searchType !== 'all') {\n      freelancer_list = this.state.freelancerList.filter((item) => {\n        return (\n          (this.state.searchType === 'first_name' && item.first_name && item.first_name.toLowerCase().search(this.state.searchValue.toLowerCase()) !== -1) ||\n          (this.state.searchType === 'last_name' && item.last_name && item.last_name.toLowerCase().search(this.state.searchValue.toLowerCase()) !== -1) ||\n          (this.state.searchType === 'email' && item.email && item.email.toLowerCase().search(this.state.searchValue.toLowerCase()) !== -1)\n        );\n      });\n    } else {\n      freelancer_list = this.state.freelancerList.filter((item) => {\n        return (\n          (item.first_name && item.first_name.toLowerCase().search(this.state.searchValue.toLowerCase()) !== -1) ||\n          (item.last_name && item.last_name.toLowerCase().search(this.state.searchValue.toLowerCase()) !== -1) ||\n          (item.email && item.email.toLowerCase().search(this.state.searchValue.toLowerCase()) !== -1)\n        );\n      });\n    }\n    return (\n      <div style={{maxWidth: 1200, margin: '0px auto'}}>\n        <div className=\"top-bar\">\n          <img src={LogoIcon} style={{width: 50}} />\n          <div>\n            <select onChange={this.handleSearchTypeChange}>\n              <option value=\"all\">all</option>\n              <option value=\"email\">email</option>\n              <option value=\"first_name\">first name</option>\n              <option value=\"last_name\">last name</option>\n            </select>\n            <input\n              id=\"search\"\n              type=\"text\"\n              value={this.state.searchValue}\n              onChange={this.handleSearchValueChange}\n            />\n          </div>\n        </div>\n        <div className=\"freelancer-list\">\n          {\n            freelancer_list && freelancer_list.length ?\n              freelancer_list.map((data, index)=>(\n                <Card\n                  key={data.id + '_' + 'freelancer'}\n                  first_name={data.first_name}\n                  last_name={data.last_name}\n                  email={data.email}\n                  first_name={data.first_name}\n                  avatar={data.avatar}\n                />\n              )) :\n              <div>\n                NO RESULTS FOUND\n              </div>\n          }\n        </div>\n      </div>\n      );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}